/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void connect(TreeLinkNode root) {
        if(root==null) return;
	    Queue<TreeLinkNode> queue = new LinkedList<TreeLinkNode>();  
	    TreeLinkNode current = null;  
	    queue.add(root);  
        
	    while(!queue.isEmpty()){  
		    int n = queue.size();
	        for(int i=0;i<n;i++){
		        current = queue.poll();
                current.next = queue.peek();
		        if(current.left != null)  queue.offer(current.left);  	          
		        if(current.right != null) queue.offer(current.right); 
		    }
            current.next = null;
	    }  	

    }
}
